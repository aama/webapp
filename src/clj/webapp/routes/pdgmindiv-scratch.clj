(defn handle-pdgmindivdisplay
  [lvalcluster]
  (layout/common
   (let [;; parse lvalcluster string (as in sparql/pdgmqry-sparql-gen-vrbs)
         vals (split lvalcluster #"," 2)
         language (first vals)
         Language (capitalize language)
         sourcevcs (split (last vals) #"," 2)
         source (first sourcevcs)
         vcs (last sourcevcs)
         ;;vcs (split (last vals) #"," 2)
         pos (first vcs)
         mpropsvals (split (last vcs) #"%" 2)
         mprops (first (split mpropsvals #"," 2))
         valstr (last (split mpropsvals #"," 2))
         morphclass (first mprops)
         ;;morphclass (split #"," (first mpropsvals) 2)
         propstr (last mprops)
         ;; morphclass (first (split mprops #"," 2))
         props (if (re-find #"=" propstr)
                 (split propstr #"," 2)
                 "")
         lexeme (if (re-find #"lexeme=" props)
                  (first (split (last (split props #"lexeme=" 2)) #","))
                  (str ""))
         ;; propsvec (split props #",")
         valstr (last mpropsvals)

(def lvalcluster "beja-hud,APp.469-HDp.120 ,Verb,Finite,conjClass=Prefix,lexeme=bis,polarity=Affirmative,rootClass=CVC,tam=Past%number,person,gender,token")
(def values (split lvalcluster #"," 2))
(def language (first values))
(def sourcevcs (split (last values) #"," 2))
(def srce (first sourcevcs))
(def vcs (last sourcevcs))
(def pos (first (split vcs #"," 2)))
(def mpropsvals1 (last (split vcs #"," 2)))
(def mpropsvals2 (split mpropsvals1 #"%" 2))
(def mprops (first mpropsvals2))
(def valstr (last mpropsvals2))
(def morphclass (first (split mprops #"," 2)))
(def  propstr (last (split mprops #"," 2)))
(def props (if (re-find #"=" propstr) (split propstr #"," ) ""))
(def lexeme (if (re-find #"lexeme=" propstr) (first (split (last (split propstr #"lexeme=" 2)) #",")) (str "")))
         ;; propsvec (split props #",")
         valstr (last mpropsvals)
